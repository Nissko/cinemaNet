@page "/films"
@using global::Cinema.Client.DTO.Movie
@using global::Cinema.Client.Services
@using Microsoft.AspNetCore.SignalR.Client
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject AuthService AuthService

<PageTitle>Фильмы</PageTitle>

<h1>Фильмы</h1>
<div class="mt-3 mb-3">
    <a href="film-add" class="btn btn-primary">Добавить фильм</a>
</div>

<div class="d-flex flex-row align-items-center flex-wrap justify-content-start gap-4">
    @if (_movies != null)
    {
        @foreach (var movie in _movies)
        {
            <div class="card h-100 d-flex flex-column 
                @((_moviesToDelete.Contains(movie.Id) ? "fade-out" : ""))" 
                 style="width: 18.5rem;" @key="movie.Id">
                @*<img src="..." class="card-img-top" alt="...">*@
                <div class="card-body">
                    <h5 class="card-title d-flex align-items-center fw-bold" style="min-height: 2em; max-height: 2em;">
                        @movie.Title
                    </h5>
                    <p class="card-text text-truncate" style="max-height: 2.5em; overflow: hidden;">
                        @movie.Description
                    </p>
                    <div class="nav-item">
                        <div class="nav-link d-flex p-0 text-black"><span
                                                             class="d-flex pe-2 justify-content-start align-items-center flex-row"
                                                             aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                                                                     fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16">
                                <path
                                    d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
                            </svg></span> @movie.Rating</div>
                    </div>
                    <div class="nav-item">
                        <div class="nav-link d-flex p-0 text-black"><span
                                                             class="d-flex pe-2 justify-content-start align-items-center flex-row"
                                                             aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                                                                     fill="currentColor" class="bi bi-clock-history"
                                                                                     viewBox="0 0 16 16">
                                <path
                                    d="M8.515 1.019A7 7 0 0 0 8 1V0a8 8 0 0 1 .589.022zm2.004.45a7 7 0 0 0-.985-.299l.219-.976q.576.129 1.126.342zm1.37.71a7 7 0 0 0-.439-.27l.493-.87a8 8 0 0 1 .979.654l-.615.789a7 7 0 0 0-.418-.302zm1.834 1.79a7 7 0 0 0-.653-.796l.724-.69q.406.429.747.91zm.744 1.352a7 7 0 0 0-.214-.468l.893-.45a8 8 0 0 1 .45 1.088l-.95.313a7 7 0 0 0-.179-.483m.53 2.507a7 7 0 0 0-.1-1.025l.985-.17q.1.58.116 1.17zm-.131 1.538q.05-.254.081-.51l.993.123a8 8 0 0 1-.23 1.155l-.964-.267q.069-.247.12-.501m-.952 2.379q.276-.436.486-.908l.914.405q-.24.54-.555 1.038zm-.964 1.205q.183-.183.35-.378l.758.653a8 8 0 0 1-.401.432z"/>
                                <path d="M8 1a7 7 0 1 0 4.95 11.95l.707.707A8.001 8.001 0 1 1 8 0z"/>
                                <path
                                    d="M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5"/>
                            </svg></span> @movie.DurationTimeSpan.Hours час(-а) @movie.DurationTimeSpan.Minutes минут (-а)
                        </div>
                    </div>
                    <div class="d-flex mt-2">
                        <a href="film-edit/@movie.Id" class="btn btn-secondary w-100">Изменить</a>
                    </div>
                    <div class="d-flex mt-2">
                        <button @onclick="() => DeleteFilm(movie.Id)" class="btn btn-danger w-100">Удалить</button>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div role="status">Загрузка...</div>
    }
</div>


@code {
    private HubConnection _hubConnection;
    private MovieDTO[]? _movies;
    private HashSet<Guid> _moviesToDelete = new();

    protected override async Task OnInitializedAsync()
    {
        var isAuthenticated = await AuthService.IsUserAuthenticated();
        if (!isAuthenticated)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            await ConnectToHub();
            await LoadMovies();
        }
    }

    private async Task ConnectToHub()
    {
        //TODO: указание Dev/Host
        _hubConnection = new HubConnectionBuilder()
            //.WithUrl(NavigationManager.ToAbsoluteUri("http://aib-cinema.ru/api/hub/moviehub"))
            .WithUrl(NavigationManager.ToAbsoluteUri("http://localhost:5294/hub/moviehub"))
            .Build();
        
        _hubConnection.On<MovieDTO>("ReceiveMovieUpdate", movie =>
        {
            var existing = _movies?.FirstOrDefault(m => m.Id == movie.Id);
            if (existing != null && _movies != null)
            {
                // Замена существующего фильма
                var index = Array.IndexOf(_movies, existing);
                if (index >= 0)
                {
                    _movies[index].Title = movie.Title;
                    _movies[index].Description = movie.Description;
                    _movies[index].Duration = movie.Duration;
                    _movies[index].Rating = movie.Rating;
                }
            }
            else
            {
                // Добавление нового фильма
                if (_movies != null)
                    _movies = _movies.Append(movie).ToArray();
            }

            StateHasChanged();
        });

        _hubConnection.On<Guid>("ReceiveMovieDelete", id =>
        {
            _movies = _movies?.Where(m => m.Id != id).ToArray();
            StateHasChanged();
        });

        try
        {
            await _hubConnection.StartAsync();
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Ошибка подключения к SignalR: {ex.Message}");
        }
    }

    private async Task LoadMovies()
    {
        _movies = await Http.GetFromJsonAsync<MovieDTO[]>("Movie");
        StateHasChanged();
    }

    /// <summary>
    /// Удаление фильма
    /// </summary>
    private async Task DeleteFilm(Guid movieId)
    {
        if (movieId != Guid.Empty)
        {
            _moviesToDelete.Add(movieId);
            StateHasChanged();

            await Task.Delay(500);
            
            var response = await Http.DeleteAsync($"Movie/{movieId}");
            
            if (!response.IsSuccessStatusCode)
            {
                var error = await response.Content.ReadAsStringAsync();
                Console.Error.WriteLine($"Ошибка: {error}");
            }
        }
    }
}